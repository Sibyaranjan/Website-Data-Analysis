# -*- coding: utf-8 -*-
"""Website Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xn2DQ6d5Msw1iZKRbLxAtJ0WNbZcJsd9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("Website Data.csv")
df.head()

df.columns=df.iloc[0]#It convert the first row as a header
df.head(5)

df=df.drop(index=0).reset_index(drop=True)# first index delete and second index start from 0
df.head(2)

df.rename(columns={"Session primary channel group (Default channel group)": "Channel group", "Date + hour (YYYYMMDDHH)": "Date hour"}, inplace=True)# Rename the columns

df.head(5)

df.info()

df['Date hour']=pd.to_datetime(df['Date hour'],format="%Y%m%d%H",errors='coerce')#Covert the object Date time format to Date time format

numeric_cols=df.columns.drop(["Channel group","Date hour"])# here except channel group and Date hour all columns convert to numrical columns
df[numeric_cols]=df[numeric_cols].apply(pd.to_numeric,errors="coerce")

df["Hour"]=df["Date hour"].dt.hour#create new column named Hour

df.head(5)

df.info()

df.describe()

"""#Sessions and Users Overtime"""

sns.set(style="whitegrid")
plt.figure(figsize=(10,5))
df.groupby("Date hour")[["Sessions","Users"]].sum().plot(ax=plt.gca())
plt.title("Sessions and Users Overtime")
plt.xlabel("Date hour")
plt.ylabel("Count")
plt.show()

"""#Total Users by Channel"""

plt.figure(figsize=(8,5))
sns.barplot(data=df,x="Channel group",y="Users",estimator=np.sum,palette="viridis")
plt.title("Total Users by channels")
plt.xticks(rotation=45)
plt.show()

"""#Average Enagagement Time per channel

"""

plt.figure(figsize=(8,5))
sns.barplot(data=df,x="Channel group",y="Average engagement time per session",estimator=np.mean,palette="magma")
plt.title("Average engagement time per channel")
plt.xticks(rotation=45)
plt.show()

"""#Engagement Rate Distrubuted by channels"""

plt.figure(figsize=(8,5))
sns.boxplot(data=df,x="Channel group",y="Engagement rate",palette="magma")
plt.title("Engagement rate distributed by channel")
plt.xticks(rotation=45)
plt.show()

"""#Traffic by hour and Channel"""

heatmap_data = df.groupby(["Hour", "Channel group"])["Sessions"].sum().unstack().fillna(0)

plt.figure(figsize=(12,6))
sns.heatmap(heatmap_data, cmap="YlGnBu", linewidths=.5, annot=True, fmt=".0f")
plt.title("Traffic by Hour and Channel")
plt.xlabel("Channel group")
plt.ylabel("Hours of Day")
plt.show()

"""1. Data Overview
Total records: 3,182

Key metrics analyzed:

Users, Sessions, Engaged Sessions

Engagement Rate, Average Engagement Time

Event Count, Events per Session

üìà Traffic Trends & Behavior
2. Sessions and Users Over Time
User and session activity peaks during certain hours of the day.

Clear fluctuations in traffic volume suggest time-based engagement trends.

3. Top Channel Groups
Main traffic sources include:

Direct

Organic Social

Referral

Direct traffic is among the highest in terms of user engagement and volume.

üîç Engagement Insights
4. Engagement Rate Analysis
The average engagement rate is approximately 50%, indicating half of the sessions involve meaningful interaction.

Some channels consistently show better engagement, hinting at more qualified traffic sources.

5. Events & Sessions
Higher event counts are often linked with longer engagement time and more engaged sessions.

The average events per session is around 4.67, showing users interact multiple times per visit.

üïí Hourly Engagement Patterns
Analysis shows user activity is highest between 12 PM and 6 PM.

This insight can help in content scheduling and marketing campaign timing.
"""

